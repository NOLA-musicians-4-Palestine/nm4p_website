name: Deploy Jekyll site to Pages

on:
  # manually from the Actions tab
  workflow_dispatch:
  # on a schedule
  schedule:
    # Runs every hour
    - cron: '0 * * * *'
  # on pushes to the 'live' branch
  push:
    branches:
      - live

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    # if: github.ref == 'refs/heads/live'

    environment:
      name: github-pages

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        if: github.ref == 'refs/heads/live'
        id: pages
        uses: actions/configure-pages@v5

      - name: generate CNAME file if a custom domain is defined for the repository
        if: github.ref == 'refs/heads/live'
        run: |
          CUSTOM_DOMAIN=$(curl -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/pages | jq -r '.cname')
          if [ "$CUSTOM_DOMAIN" != "null" ]; then
            echo "$CUSTOM_DOMAIN" | tee CNAME
          fi

      - name: Inject OAuth Token
        run: |
          echo '${{ secrets.GOOGLE_OAUTH_TOKEN }}' > ${{ github.workspace }}/token.json

      - name: Fetch and Render Events from Google Calendar
        run: |
          docker run --rm \
          -w /workspace \
          -v ${{ github.workspace }}:/workspace \
          ghcr.io/${{ github.repository_owner }}/${{ github.repository }}/tools:${{ github.ref_name }} \
          python tools/sync_calendars.py

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Upload artifact
        if: github.ref == 'refs/heads/live'
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    if: github.ref == 'refs/heads/live'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
